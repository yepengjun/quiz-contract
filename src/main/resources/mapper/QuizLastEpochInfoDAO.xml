<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.conflux.contract.dao.QuizLastEpochInfoDao">
  <resultMap id="BaseResultMap" type="com.conflux.contract.entity.QuizLastEpochInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contract_address" jdbcType="VARCHAR" property="contractAddress" />
    <result column="epoch_number" jdbcType="BIGINT" property="epochNumber" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, contract_address, epoch_number, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from quiz_last_epoch_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from quiz_last_epoch_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.conflux.contract.entity.QuizLastEpochInfo" useGeneratedKeys="true">
    insert into quiz_last_epoch_info (contract_address, epoch_number, create_time, 
      update_time)
    values (#{contractAddress,jdbcType=VARCHAR}, #{epochNumber,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.conflux.contract.entity.QuizLastEpochInfo" useGeneratedKeys="true">
    insert into quiz_last_epoch_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contractAddress != null">
        contract_address,
      </if>
      <if test="epochNumber != null">
        epoch_number,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contractAddress != null">
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="epochNumber != null">
        #{epochNumber,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.conflux.contract.entity.QuizLastEpochInfo">
    update quiz_last_epoch_info
    <set>
      <if test="contractAddress != null">
        contract_address = #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="epochNumber != null">
        epoch_number = #{epochNumber,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.conflux.contract.entity.QuizLastEpochInfo">
    update quiz_last_epoch_info
    set contract_address = #{contractAddress,jdbcType=VARCHAR},
      epoch_number = #{epochNumber,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getQuizLastEpochInfoByAddress" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from quiz_last_epoch_info
    where contract_address = #{contractAddress,jdbcType=VARCHAR} limit 1
  </select>
</mapper>